{"meta":{"title":"Chivier's Blog","subtitle":null,"description":null,"author":"Chivier Humber","url":"https://chivier.github.io","root":"/"},"pages":[{"title":"About","date":"2019-04-22T06:18:36.000Z","updated":"2021-12-27T14:47:08.452Z","comments":false,"path":"Whoami/index.html","permalink":"https://chivier.github.io/Whoami/index.html","excerpt":"","text":"个人简介中国科学技术大学在读学生 现役中国科学技术大学鸿雁超算队教练 擅长语言：（按熟练度排序） C/C++ Rust Python Verilog Bash FORTRAN Latex Java JavaScript SQL AHK MATLAB Julia 技能： 代码分析 可以迅速理解代码框架，参与众多开源项目，开发经验丰富 数据可视化 传统数据分析工具均可熟练使用 如：SPSS、Excel、Stata 熟练使用各种作图工具：Latex、Edraw、Inkscape、Dia、Painta、Visio 熟练掌握交互式数据可视化：Echarts、Eviews 熟练使用常用科学软件：COMSOL、Tecplot 熟练使用常用数学软件：MATLAB、Mathematica、Maple 掌握3D建模和简单的动画设计：Maya、Blender、Unreal Engine、Meshroom 熟练使用 AutoCAD，建筑绘图 简单的图形图像处理和视频剪辑：PS、DaVinci Resolve、OBS、Krita、GIMP 非常熟练的 Latex 排版能力 非常熟练的 Linux/Unix 开发能力和基本运维，长期使用 Ubuntu，并作为 Gnome 开源社区开发者 各类应用开发，包含但不限于：Android App、 IOS App、 桌面端应用、 Web 应用。会使用 Vue、Angular 等常用框架 单片机开发 和 FPGA开发 较熟练掌握： Arduino、Xilinx Vivado 适应能力改造能力极强，对 Geany、VScode、Atom、Capslock+、Qbar、MATLAB、SourceTrail、Sublime、Brackets、Alfred、Wox 等工具均开发过插件，部分已上线 简单的数据挖掘 简单的调音和音频处理 会使用：Audacity、FL Studio 熟练安装各类系统，并在各种系统下均开发过非常好用的小工具 矩阵论、数论和近世代数小有研究 热力学、流体力学、量子力学领域有极高的热情 目前研究领域： High Performance Computing Compiler Designing Computational Fluid Mechanics 其他： 国家二级建筑师"},{"title":"Categories","date":"2019-05-15T01:53:13.000Z","updated":"2021-12-23T04:47:10.000Z","comments":false,"path":"categories/index.html","permalink":"https://chivier.github.io/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2022-07-01T08:53:36.000Z","updated":"2022-07-01T08:54:17.548Z","comments":false,"path":"about/index.html","permalink":"https://chivier.github.io/about/index.html","excerpt":"","text":"Github: https://github.com/Chivier"}],"posts":[{"title":"GiNac Experience","slug":"2023/GiNac-Experience","date":"2023-10-23T11:49:25.000Z","updated":"2023-10-23T11:49:59.848Z","comments":true,"path":"2023/10/23/2023/GiNac-Experience/","link":"","permalink":"https://chivier.github.io/2023/10/23/2023/GiNac-Experience/","excerpt":"https://www.ginac.de/tutorial/","text":"https://www.ginac.de/tutorial/ GiNac is an exceptional symbol library for C++ development. Install: 1234tar xf ginac_xxx.tar.gzcd ginac_xxxcmake -Bbuildcmake --build build --parallel 8 Example: 12345678910111213141516171819using namespace std;using namespace GiNaC;ex HermitePoly(const symbol &amp; x, int n)&#123; ex HKer=exp(-pow(x, 2)); // uses the identity H_n(x) == (-1)^n exp(x^2) (d/dx)^n exp(-x^2) return normal(pow(-1, n) * diff(HKer, x, n) / HKer);&#125;int main()&#123; symbol z(&quot;z&quot;); for (int i=0; i&lt;6; ++i) cout &lt;&lt; &quot;H_&quot; &lt;&lt; i &lt;&lt; &quot;(z) == &quot; &lt;&lt; HermitePoly(z,i) &lt;&lt; endl; return 0;&#125;","categories":[{"name":"Develop","slug":"Develop","permalink":"https://chivier.github.io/categories/Develop/"}],"tags":[{"name":"include","slug":"include","permalink":"https://chivier.github.io/tags/include/"}]},{"title":"6","slug":"2023/6","date":"2023-03-08T15:03:39.000Z","updated":"2023-04-03T14:15:10.521Z","comments":true,"path":"2023/03/08/2023/6/","link":"","permalink":"https://chivier.github.io/2023/03/08/2023/6/","excerpt":"Target: Connect physically seperated machines","text":"Target: Connect physically seperated machines --&gt; sharing --&gt; incresing capacity through parallelism --&gt; tolerate faults --&gt; archieve security via isolate Historical ContextHappening: Local area networks (1980s)Developing: Data centers, Big web sites (1990s) such as: web search, shopping ?: a lot of data, and a lot of usersNext ego: Cloud computing (2000s) move computation &amp; data to cloud server ?: start websites on personal willing, data learning apps, high performance dataCurrent states: actual problems booming field Challenges Many concurrent parts must be deal with partial failure -&gt; complexity tricky realise the performance benefits LabsLab 1: distributed big-data framework (like MapReduce)Lab 2: fault tolerance library using replication (Raft)Lab 3: a simple fault-tolerant databaseLab 4: scalable database performance via sharing Focus course and The main topicsThis is a course about infrastructure for applications. Storage. Communication. Computation. Main topics: Fault tolerance make systems highly availably, no matter what status they are being replication recoverability, recover previous state logging/transactions ConsistencyGeneral-purpose infrastructure needs well-defined behavior.E.g. “Get(k) yields the value from the most recent Put(k,v).”Achieving good behavior is hard!“Replica” servers are hard to keep identical. Performancescalable throughput TradeoffReplication improves the availability, but lose performanceReduce latency ImplementationThis material comes up a lot in the real world.All big web sites and cloud providers are expert at distributed systems.Many big open source projects are built around these ideas.We’ll read multiple papers from industry.And industry has adopted many ideas from academia Case Study: MapReduce","categories":[{"name":"Skill","slug":"Skill","permalink":"https://chivier.github.io/categories/Skill/"}],"tags":[{"name":"system","slug":"system","permalink":"https://chivier.github.io/tags/system/"},{"name":"Study","slug":"Study","permalink":"https://chivier.github.io/tags/Study/"},{"name":"distributed","slug":"distributed","permalink":"https://chivier.github.io/tags/distributed/"}]},{"title":"我为什么从零开始新建 blog","slug":"2023/我为什么从零开始新建-blog","date":"2023-02-02T21:46:17.000Z","updated":"2023-02-02T21:46:30.756Z","comments":true,"path":"2023/02/02/2023/我为什么从零开始新建-blog/","link":"","permalink":"https://chivier.github.io/2023/02/02/2023/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E5%BB%BA-blog/","excerpt":"深夜，独坐家中，闲来无事，翻起了自己以前写过的文章和笔记。不能说井井有条吧，只能说杂乱不堪。在此静坐反思，寻求解决方法。","text":"深夜，独坐家中，闲来无事，翻起了自己以前写过的文章和笔记。不能说井井有条吧，只能说杂乱不堪。在此静坐反思，寻求解决方法。 我之前都写了啥？我的老笔记，是通过 github page 发布出去的。写的都是我日常工作遇到的问题，或者整理的一些资料和文件。准确来说，他们不是合格的 blog，他们只是聚集的信息。而信息没有进行加工和处理，是不会具有附加价值的。 为什么会变成这样？现在博客凌乱的局面有两个原因： 没有区分博客、笔记两者的区别，没有设立明确的分界线。 记录信息之后没有归纳较健康的数据流系统，没有定期复习。 输出的时候没有进行充分的思考和理解，只是对一些问题进行了复述。 所以我的问题不在于我写不出东西，而在于写不出高质量的剖析。主要的原因是缺乏独立的深度思考。 之后怎么办？首先我花费了接近一个月完成自己的知识系统的重建。这个之后的 blog 我会详细的进行一次介绍，关于我的信息流是如何变成知识库的。 同时，我也找到了更合适的写作发布平台，可以对不同领域的问题进行发布和解读。现在在这里写作就非常舒适，比起之前的 github page 来说，两者差异不大，但是自定义的域名、自己的流量统计、自己的 wordpress 让我更加安心吧。不过 wordpress 也有他的缺点，例如需要手动编辑大量的页面信息。因此我最终决定两者配合使用，wordpress 可以作为内容的备份。 此外，我回到 github page 重建 blog 的原因是我一时兴起重构了自己的工作流，可以在 obsidian 中一键发布编辑好的笔记，这种工作体验也是我之前从未想过的。 最后我想说，在这里，我的主要任务是和国内的程序员、学生群体交流。我作为这两个群体中的成员，我希望吧我的一些想法和思考摆上台面，大家一起讨论。随时欢迎大家和我联系交流。","categories":[{"name":"Fun","slug":"Fun","permalink":"https://chivier.github.io/categories/Fun/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://chivier.github.io/tags/blog/"}]},{"title":"MacOS Fingerprint in bash","slug":"2023/MacOS-Fingerprint-in-bash","date":"2023-02-02T21:25:23.000Z","updated":"2023-02-02T21:25:29.955Z","comments":true,"path":"2023/02/02/2023/MacOS-Fingerprint-in-bash/","link":"","permalink":"https://chivier.github.io/2023/02/02/2023/MacOS-Fingerprint-in-bash/","excerpt":"First, open up Terminal. Navigate to the directory where the system stores the list of PAMs by typing cd /etc/pam.d/ and open the sudo file there in your favorite command-line text editor.","text":"First, open up Terminal. Navigate to the directory where the system stores the list of PAMs by typing cd /etc/pam.d/ and open the sudo file there in your favorite command-line text editor. 1 (You can also always use a GUI editor like BBEdit too.) Note that if you open it via the command-line, you’ll need to use sudo itself to do so, since the file is (understandably) protected. Once you’ve opened it, add the following below the first line (you’ll see the headers under which each of the entries goes): auth sufficient pam_tid.so That line basically tells the sudo command that the Touch ID authentication module is sufficient to authorize the user, which is all you need to do. Save the file and you’re done! Now, the next time you use the sudo command, instead of being prompted for your password, you’ll get a dialog box asking you to authenticate with Touch ID, just as you would any other time you needed to authenticate. (And, as an extra bonus, if you choose to click the Enter Password, you’ll get prompted to use either the password or your Apple Watch, if you have one.) 查看原网页: sixcolors.com","categories":[{"name":"Skill","slug":"Skill","permalink":"https://chivier.github.io/categories/Skill/"}],"tags":[{"name":"MacOS","slug":"MacOS","permalink":"https://chivier.github.io/tags/MacOS/"}]}],"categories":[{"name":"Develop","slug":"Develop","permalink":"https://chivier.github.io/categories/Develop/"},{"name":"Skill","slug":"Skill","permalink":"https://chivier.github.io/categories/Skill/"},{"name":"Fun","slug":"Fun","permalink":"https://chivier.github.io/categories/Fun/"}],"tags":[{"name":"include","slug":"include","permalink":"https://chivier.github.io/tags/include/"},{"name":"system","slug":"system","permalink":"https://chivier.github.io/tags/system/"},{"name":"Study","slug":"Study","permalink":"https://chivier.github.io/tags/Study/"},{"name":"distributed","slug":"distributed","permalink":"https://chivier.github.io/tags/distributed/"},{"name":"blog","slug":"blog","permalink":"https://chivier.github.io/tags/blog/"},{"name":"MacOS","slug":"MacOS","permalink":"https://chivier.github.io/tags/MacOS/"}]}