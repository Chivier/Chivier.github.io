<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我为什么从零开始新建 blog</title>
    <link href="/2023/02/03/2023/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E5%BB%BA-blog/"/>
    <url>/2023/02/03/2023/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E5%BB%BA-blog/</url>
    
    <content type="html"><![CDATA[<p>深夜，独坐家中，闲来无事，翻起了自己以前写过的文章和笔记。不能说井井有条吧，只能说杂乱不堪。在此静坐反思，寻求解决方法。</p><span id="more"></span><h1 id="我之前都写了啥？"><a href="#我之前都写了啥？" class="headerlink" title="我之前都写了啥？"></a>我之前都写了啥？</h1><p>我的老笔记，是通过 github page 发布出去的。写的都是我日常工作遇到的问题，或者整理的一些资料和文件。<strong>准确来说，他们不是合格的 blog，他们只是聚集的信息。</strong>而信息没有进行加工和处理，是不会具有附加价值的。</p><h1 id="为什么会变成这样？"><a href="#为什么会变成这样？" class="headerlink" title="为什么会变成这样？"></a>为什么会变成这样？</h1><p>现在博客凌乱的局面有两个原因：</p><ol><li>没有区分博客、笔记两者的区别，没有设立明确的分界线。</li><li>记录信息之后没有归纳较健康的数据流系统，没有定期复习。</li><li>输出的时候没有进行充分的思考和理解，只是对一些问题进行了复述。</li></ol><p>所以我的问题不在于我写不出东西，而在于写不出高质量的剖析。主要的原因是缺乏独立的深度思考。</p><h1 id="之后怎么办？"><a href="#之后怎么办？" class="headerlink" title="之后怎么办？"></a>之后怎么办？</h1><p>首先我花费了接近一个月完成自己的知识系统的重建。这个之后的 blog 我会详细的进行一次介绍，关于我的信息流是如何变成知识库的。</p><p>同时，我也找到了更合适的写作发布平台，可以对不同领域的问题进行发布和解读。现在在这里写作就非常舒适，比起之前的 github page 来说，两者差异不大，但是自定义的域名、自己的流量统计、自己的 wordpress 让我更加安心吧。不过 wordpress 也有他的缺点，例如需要手动编辑大量的页面信息。因此我最终决定两者配合使用，wordpress 可以作为内容的备份。</p><p>此外，我回到 github page 重建 blog 的原因是我一时兴起重构了自己的工作流，可以在 obsidian 中一键发布编辑好的笔记，这种工作体验也是我之前从未想过的。</p><p>最后我想说，在这里，我的主要任务是和国内的程序员、学生群体交流。我作为这两个群体中的成员，我希望吧我的一些想法和思考摆上台面，大家一起讨论。随时欢迎大家和我联系交流。</p>]]></content>
    
    
    <categories>
      
      <category>Fun</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacOS Fingerprint in bash</title>
    <link href="/2023/02/03/2023/MacOS-Fingerprint-in-bash/"/>
    <url>/2023/02/03/2023/MacOS-Fingerprint-in-bash/</url>
    
    <content type="html"><![CDATA[<p>First, open up Terminal. Navigate to the directory where the system stores the list of PAMs by typing <code>cd /etc/pam.d/</code> and open the <code>sudo</code> file there in your favorite command-line text editor.</p><span id="more"></span><p>1 (You can also always use a GUI editor like BBEdit too.) Note that if you open it via the command-line, you’ll need to use <code>sudo</code> itself to do so, since the file is (understandably) protected.</p><p>Once you’ve opened it, add the following below the first line (you’ll see the headers under which each of the entries goes):</p><blockquote><p><code>auth sufficient pam_tid.so</code></p></blockquote><p>That line basically tells the <code>sudo</code> command that the Touch ID authentication module is sufficient to authorize the user, which is all you need to do.</p><p><img src="https://i0.wp.com/sixcolors.com/wp-content/uploads/2020/11/sudo-touchid.png?ssl=1" alt="Sudo with Touch ID"></p><p>Save the file and you’re done! Now, the next time you use the <code>sudo</code> command, instead of being prompted for your password, you’ll get a dialog box asking you to authenticate with Touch ID, just as you would any other time you needed to authenticate. (And, as an extra bonus, if you choose to click the Enter Password, you’ll get prompted to use either the password <em>or</em> your Apple Watch, if you have one.)</p><p><a href="https://sixcolors.com/post/2020/11/quick-tip-enable-touch-id-for-sudo/">查看原网页: sixcolors.com</a></p>]]></content>
    
    
    <categories>
      
      <category>Skill</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MacOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
